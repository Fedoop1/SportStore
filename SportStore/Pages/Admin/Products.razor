@page "/admin/products"
@page "/admin"

@using SportStore.Models.Repo
@inherits OwningComponentBase<SportStore.Models.Repo.IStoreRepository>

<table class="table table-sm table-striped table-bordered">
    <thead>
    <tr>
        <th>
            Id
        </th>
        <th>
            Name
        </th>
        <td>
            Category
        </td>
        <td>
            Price
        </td>
    </tr>
    </thead>
    <tbody>
    @if (ProductData?.Count() > 0)
    {
        @foreach (var product in ProductData)
        {
            <tr>
                <td>
                    @product.ProductId
                </td>
                <td>
                    @product.Name
                </td>
                <td>
                    @product.Category
                </td>
                <td>
                    @product.Price.ToString("C")
                </td>
                <td>
                    <NavLink class="btn btn-info btn-sm" href="@GetDetailsUrl(product.ProductId)">
                        Details
                    </NavLink>
                    <NavLink class="btn btn-info btn-sm" href="@GetEditUrl(product.ProductId)">
                        Edit
                    </NavLink>
                    <button class="btn btn-danger btn-sm" @onclick="@(e => DeleteProduct(product))">Delete</button>
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td class="col-5">No Products</td>
        </tr>
    }
    </tbody>
</table>
<NavLink class="btn btn-primary" href="/admin/products/create">Create</NavLink>

@code
{
    public IStoreRepository Repository => Service;

    public IEnumerable<Product> ProductData { get; set; }

    protected override void OnInitialized() => UpdateData();

    public void UpdateData()
    {
        ProductData = Repository.Products.ToList();
    }

    public string GetDetailsUrl(int id) => $"/admin/products/details/{id}";

    public string GetEditUrl(int id) => $"/admin/products/edit/{id}";

    public void DeleteProduct(Product product)
    {
        Repository.DeleteProduct(product);
        UpdateData();
    }
}
